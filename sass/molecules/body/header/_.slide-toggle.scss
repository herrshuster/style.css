// The Toggle
//
// The toggle is inserted inside the body, immediately before the <main> element.
// Further implementation will make a generic toggle element that can be used
// for tab panels and other uses.
//
// input:c#slide-checkbox.slide-checkbox+label[for="slide-checkbox"].slide-toggle
$toggle-bar-height: ($unit__nav--height/1rem) * 3.2px;
.slide-toggle {
	float: left;
	height: ceil($toggle-bar-height);
	width: $unit__nav--height;
	cursor: pointer;	
	z-index: 1;
	display: none;
	background-color: $color-primary;
	margin: auto;
	position: fixed;
	right: #{$unit__gutter--width};
	bottom: auto;
	top: #{$unit__nav--height / 1.5};
	padding: 0;
	min-width: 0;
	content: "";
	z-index: 10000;
	@include transition;
	@include prefixer(transition, transform #{$length__transition / 2} $style__animation-ease);
	@include box-shadow($color-primary);
	@include media-to($length-mobile-cutoff){
		display: block;}
	&:before {
		@include transition;
		content: "";	
		display: block;	
		height: ceil($toggle-bar-height);	
		width: $unit__nav--height;
		background-color: $color-primary;		
		position: absolute;
		bottom: #{$unit__nav--height / 2.5};		
		@include prefixer(transform-origin, 90% 0%);
		@include box-shadow($color-primary);
	}
	&:after {
		@include transition;
		content: "";	
		display: block;	
		height: ceil($toggle-bar-height);	
		width: $unit__nav--height;
		background-color: $color-primary;		
		position: absolute;
		top: #{$unit__nav--height / 2.7};
		@include prefixer(transform-origin, 100% 0%);
		@include box-shadow($color-primary);
	}
	}

.slide-toggle,
.slide-toggle:active,
.slide-toggle:focus {
	outline: none !important;
	-webkit-tap-highlight-color: rgba(0,0,0,0);}



.slide-checkbox {
	position: absolute;
	top: -9999px;
	left: -9999px;
	& ~ main{
		@include transition;
		@include media-from($length-mobile-cutoff){
			@include transition(0s);
		}
		right: 0;
	}
	& ~ main{
		position: relative;}
	@include media-to($length-mobile-cutoff){
		&:checked,
		&.activated {			
			& ~ header{				
				&>nav{
					right: 0;
					@include prefixer(transform, translateY(0) scale3d(1, 1, 1));
				}				
			}
			& ~ main{				
				@include media-from($unit__base-x-one){
					right: 100%;
					&>nav{
						margin-left: -100%;}}
				@include media-from($unit__base-x-three){
					right: 50%;
					&>nav{
						margin-left: -50%;}}
				@include media-from($unit__base-x-five){
					right: 33%;
					&>nav{
						margin-left: -33%;}}

			}			
		}
	}
}
.slide-toggle ~ header>nav {
	@include media-from($unit__base-x-one){
		width: 100%;}
	@include media-from($unit__base-x-three){
		width: 50%;}
	@include media-from($unit__base-x-five){
		width: 33%;}
	@include media-from($length-mobile-cutoff){
		width: auto;}
	@include media-to($length-mobile-cutoff){
		position: fixed;
		right: -100%;
		height: 100%;
		top: $unit__header--height;
		background-color: $color-drawer;
		@if $skeu == faux-flat{
			@include box-shadow-inset($color-drawer);			
			box-shadow: inset $unit__shadow-size 0 $unit__shadow-blur $color__3d--dark;
		}
		@else if $skeu == flat{
			border-left: 1px solid $color__3d--dark;
			border-top: 1px solid $color__3d--dark;
		}
		@include prefixer(transition, right $length__transition $style__animation-ease);
		ul{
			float: right;
			display: block;
			width: auto;			
			li{
				float: right;
				width: 100%;
				display: table;
				ul{
					width: 100%;
					left: -100%;
					top: 0;
				}
				a{
					display: table-cell;
					vertical-align: middle;
					/*placeholder*/

				}
			}
		}
		address{
			float: left;}}}
.slide-checkbox:checked ~ .slide-toggle,
.slide-checkbox.activated ~ .slide-toggle {	
	@include media-to($length-mobile-cutoff){
		background: transparent;
		box-shadow: none;
		border: none;		
		&:before{
			//width: $unit__nav--height * 1.414;
			border: none;
			@include box-shadow-inset($color-primary);
			box-shadow: none;
			@include prefixer(transform, rotateZ(-45deg) translate(-#{$unit__nav--height / 5.71428571}, -#{$unit__nav--height / 8}));
		}	
		&:after{
			//width: $unit__nav--height * 1.414;
			border: none;	
			box-shadow: 0 $unit__shadow-size $unit__shadow-size rgba(0, 0, 0, $unit__shadow-opacity);		
			@include prefixer(transform, rotateZ(45deg) translate(-#{$unit__nav--height / 20}, #{$unit__nav--height / 20}));
		}	
		
	}}

